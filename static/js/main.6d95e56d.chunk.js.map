{"version":3,"sources":["utils/api.js","components/Footer.js","components/Header.js","components/Film.js","components/Main.js","components/Popup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","authorization","this","_baseUrl","_token","res","ok","json","Promise","reject","status","title","fetch","then","_checkResponse","id","Footer","currentYear","Date","getFullYear","className","href","Header","Film","props","film","onClick","onCardClick","isLoading","src","Poster","alt","Title","Year","Main","onSubmit","onSearch","value","placeholder","onChange","required","type","isSearching","films","map","imdbID","Popup","isPopupOpen","closePopup","filmDetails","Plot","Runtime","App","React","useState","setTitle","setFilms","activeID","setActiveID","filmInfo","setFilmInfo","setFilmDetails","setIsPopupOpen","setIsSearching","setIsLoading","e","preventDefault","searchFilmsByName","Search","console","log","catch","err","finally","getFilmByID","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d95e56d.chunk.js","sourcesContent":["class Api {\r\n  constructor({ baseUrl, authorization }) {\r\n    this._baseUrl = baseUrl;\r\n    this._token = authorization;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  searchFilmsByName(title) {\r\n    return fetch(`${this._baseUrl}?apikey=${this._token}&s=${title}`)\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  getFilmByID(id) {\r\n    return fetch(`${this._baseUrl}?apikey=${this._token}&i=${id}`)\r\n    .then(this._checkResponse)\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'http://www.omdbapi.com/',\r\n  authorization: '333826fc'\r\n});\r\n\r\nexport default api;","function Footer() {\r\n  \r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">©{currentYear} <span>Maxim Grivennyy</span> with <a className=\"footer__link\" href=\"http://www.omdbapi.com/\">OMDb API</a></p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <a href=\"/\" className=\"header__heading\">KinoPoisk</a>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","function Film(props) {\r\n\r\n  const film = props.film;\r\n\r\n  return (\r\n    <article className=\"film\" onClick={() => props.onCardClick(film)}>\r\n      <div className={`film__poster-wrapper ${props.isLoading ? 'film__poster-wrapper_loading' : ''}`}>\r\n        <img className=\"film__poster\" src={film.Poster} alt={film.Title} />\r\n      </div>\r\n      <div className=\"film__heading\">\r\n        <h3 className=\"film__title\">{film.Title} ({film.Year})</h3>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Film;","import Film from \"./Film\";\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <main className=\"content\">\r\n      <h1 className=\"content__heading\">Enter the name of the movie and press the <span>search</span> button</h1>\r\n      <form className=\"form\" onSubmit={props.onSearch}>\r\n        <input className=\"form__input\" id=\"title\" value={props.title} placeholder=\"Name of the movie\" onChange={props.onChange} required />\r\n        <button className=\"form__submit-button\" type=\"submit\">{ props.isSearching ? 'Searching...' : 'Click' }</button>\r\n      </form>\r\n      { props.isSearching && <div className=\"films__loading\">Searching...</div> }\r\n      <div className=\"films\">\r\n        {\r\n          props.films.map((film) => {\r\n            return (\r\n              <Film key={film.imdbID} film={film} onCardClick={props.onCardClick} isLoading={props.isLoading} />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","function Popup({isPopupOpen, closePopup, filmDetails}) {\r\n  return (\r\n    <div className={`popup ${isPopupOpen ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__overlay\" onClick={closePopup}></div>\r\n      <div className=\"popup__container\">\r\n        <img className=\"popup__poster\" src={filmDetails.Poster} alt={filmDetails.Title} />\r\n        <div className=\"popup__info\">\r\n          <h2 className=\"popup__title\">{filmDetails.Title}</h2>\r\n          <p className=\"popup__plot\">{filmDetails.Plot}</p>\r\n          <p className=\"popup__year\">Release Date: {filmDetails.Year}</p>\r\n          <p className=\"popup__runtime\">Runtime: {filmDetails.Runtime}</p>\r\n        </div>\r\n        <button className=\"popup__close-button\" onClick={closePopup}></button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popup;","import React from 'react'\nimport api from '../utils/api'\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport Popup from './Popup';\n\nfunction App() {\n\n  const [title, setTitle] = React.useState('');\n  const [films, setFilms] = React.useState([]);\n  const [activeID, setActiveID] = React.useState('');\n  const [filmInfo, setFilmInfo] = React.useState({});\n  const [filmDetails, setFilmDetails] = React.useState({});\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n\n  const [isSearching, setIsSearching] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  function handleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleSearch(e) {\n    e.preventDefault();\n\n    setIsSearching(true);\n    api.searchFilmsByName(title)\n    .then(res => {\n      setFilms(res.Search);\n      console.log(res.Search);\n    })\n    .catch((err) => console.log(err))\n    .finally(() => setIsSearching(false))\n  }\n\n  function handleCardClick(film) {\n    setIsLoading(true);\n    if(film.imdbID !== activeID) {\n      setActiveID(film.imdbID);\n      setFilmInfo(film);\n      api.getFilmByID(film.imdbID)\n      .then((res) => {\n        setFilmDetails(res);\n        setIsPopupOpen(true);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false))\n    } else {\n      setIsPopupOpen(true);\n    }\n  }\n\n  function handlePopupClose() {\n    setIsPopupOpen(false);\n    setIsLoading(false);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main films={films} onSearch={handleSearch} onCardClick={handleCardClick} onChange={handleChange} isSearching={isSearching} isLoading={isLoading} />\n      <Popup isPopupOpen={isPopupOpen} closePopup={handlePopupClose} filmInfo={filmInfo} filmDetails={filmDetails} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}